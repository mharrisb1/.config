###########
# Bash
###########
[[language]]
name = "bash"
formatter = { command = "shfmt", args = ["--indent", "2"] }
auto-format = true

###########
# C
###########
[[language]]
name = "c"
auto-format = true

############
# JS/TS
###########
[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
# onIgnoredFiles = "off"
# packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
# useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionsOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

############
# Markdown
############
[[language]]
name = "markdown"
language-servers = ["marksman", "github-lsp"]
formatter = { command = "prettier", args = ["--parser", "markdown"] }
soft-wrap.enable = true
auto-format = true

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'

[language-server.github-lsp]
command = "github-lsp"

############
# Python
############
[[language]]
name = "python"
language-servers = ["pyright", "ruff"]
auto-format = true

[language-server.ruff]
command = "ruff-lsp"

[language.formatter]
command = "black"
args = ["--quiet", "-"]

############
# Scheme
############
[[language]]
name = "scheme"
formatter = { command = "schemat" }
auto-format = true
language-servers = ["steel-language-server"]

[language-server.steel-language-server]
command = "steel-language-server"
args = []

############
# Rust
###########
[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
language-servers = ["rust-analyzer"]
indent = { tab-width = 4, unit = "    " }

[language-server.rust-analyzer.config.check]
command = "clippy"

############
# TOML
############
[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true
